{"version":3,"file":"static/webpack/static/development/pages/index.js.768ae65134dc6add4286.hot-update.js","sources":["webpack:///./components/Footer.js","webpack:///./pages/_app.js"],"sourcesContent":["import React, { useState, useContext } from 'react'\nimport Link from 'next/link'\nimport { LabelsContext } from '../pages/_app';\n\nconst navLinks = [\n    { href: '/#statistics', labelKey: 'statistics' },\n    { href: '/#career', labelKey: 'career' },\n    { href: '/life', labelKey: 'life' },\n    { href: '/shop', labelKey: 'shop' }\n]\n\nconst disableScrolling = () => {\n    window.onscroll = () => window.scrollTo(0, 0)\n}\n\nconst enableScrolling = () => {\n    window.onscroll = () => {}\n}\n\nconst Navigation = () => {\n    const [isOpen, toggleMenu] = useState(false)\n    const labels = useContext(LabelsContext)\n\n    const onClick = () => {\n        if (isOpen) { \n            enableScrolling()\n        } else {\n            disableScrolling()\n        }\n\n        toggleMenu(!isOpen)\n    }\n\n    return (\n        <React.Fragment>\n            <header className=\"header\">\n                <img src=\"/static/svgs/steven_zuber.svg\" alt=\"Stefan Zuber logo\" />\n\n                <div\n                    className={ `menu-btn${isOpen ? ' open' : ''}` }\n                    onClick={ onClick }>\n                    <span></span>\n                    <span></span>\n                    <span></span>\n                </div>\n            </header>\n            <nav className={ `menu${isOpen ? ' open' : ''}` } onClick={ onClick }>\n                <section className=\"section--menu\">\n                    <img src=\"/static/images/zuber-hero-page@2x.png\" alt=\"Stefan Zuber\" />\n                    <ul className=\"t-6\">\n                        {\n                            navLinks.map(({ href, labelKey }) => (\n                                <li key={ labelKey }>\n                                    <Link href={ href }>\n                                        <a className=\"cta-hover\" href={ href }>{ labels[labelKey] }</a>\n                                    </Link>\n                                </li>\n                            ))\n                        }\n                        <li className=\"t-8\">\n                            <button onClick={() => {}}>EN</button>\n                            <span> | </span>\n                            <button onClick={() => {}}>DE</button>\n                        </li>\n                    </ul>\n                </section>\n            </nav>\n        </React.Fragment>\n    );\n}\n\nexport default Navigation\n","import React, { createContext } from 'react';\nimport App, { Container } from \"next/app\";\nimport Head from \"../components/Head\";\nimport Navigation from \"../components/Navigation\";\nimport Footer from \"../components/Footer\";\nimport \"../scss/style.scss\";\nimport data from '../data.json'\n\nexport const LabelsContext = createContext();\nexport const DataContext = createContext();\nclass MyApp extends App {\n    static async getInitialProps({ Component, ctx }) {\n        const pageProps = await Component.getInitialProps(ctx);\n        pageProps.shared = { labels: data.labels, footer: data.footer }\n        return { pageProps };\n    }\n\n    render() {\n        const { Component, pageProps } = this.props;\n\n        return (\n            <Container>\n                <LabelsContext.Provider value={ pageProps.shared.labels }>\n                    <Head />\n                    <Navigation key=\"navigation\" />\n                    <DataContext.Provider value={ pageProps.data }>\n                        <Component { ...pageProps } />\n                    </DataContext.Provider>\n                    <Footer key=\"footer\" />\n                </LabelsContext.Provider>\n            </Container>\n        );\n    }\n}\n\nexport default MyApp;\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;;;;;;;;;;;;;AAOA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;AArBA;;AACA;AACA;;AADA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;AALA;AACA;AAwBA;;;;A","sourceRoot":""}