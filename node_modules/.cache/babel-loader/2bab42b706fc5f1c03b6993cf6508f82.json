{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Fade } from 'react-reveal';\n\nvar createObserver = function createObserver(el, handleIntersect) {\n  var options = {\n    root: null,\n    rootMargin: \"0px\",\n    threshold: 0.8\n  };\n  var observer = new IntersectionObserver(handleIntersect, options);\n  observer.observe(el);\n};\n\nvar Section = function Section(_ref) {\n  var baseClass = _ref.baseClass,\n      titleClass = _ref.titleClass,\n      title = _ref.title,\n      children = _ref.children,\n      flexHeight = _ref.flexHeight,\n      name = _ref.name,\n      observeIntersection = _ref.observeIntersection,\n      disableFade = _ref.disableFade;\n\n  var _useState = useState({\n    reveal: false,\n    y: null,\n    scrollUp: false\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var sectionRef = useRef();\n  useEffect(function () {\n    if (sectionRef.current && observeIntersection) {\n      createObserver(sectionRef.current, function (entries) {\n        var _entries$ = entries[0],\n            isIntersecting = _entries$.isIntersecting,\n            boundingClientRect = _entries$.boundingClientRect;\n        var y = boundingClientRect.y;\n        setState(function (prevState) {\n          return {\n            y: y,\n            reveal: isIntersecting,\n            scrollUp: prevState.y && y !== prevState.y ? y > prevState.y : prevState.scrollUp\n          };\n        });\n      });\n    }\n  }, []);\n\n  if (name === 'statistics') {}\n\n  return React.createElement(\"section\", {\n    className: \"\".concat(baseClass, \" section\").concat(flexHeight ? ' section--flex' : ''),\n    id: name\n  }, disableFade && title ? React.createElement(\"h3\", {\n    className: \"section-title t-6 t-grey \".concat(titleClass)\n  }, title) : React.createElement(Fade, {\n    bottom: true,\n    opposite: true,\n    delay: 0\n  }, title && React.createElement(\"h3\", {\n    className: \"section-title t-6 t-grey \".concat(titleClass)\n  }, title)), React.createElement(\"div\", {\n    ref: sectionRef\n  }, typeof children === 'function' ? children(state) : children));\n};\n\nexport default Section;","map":null,"metadata":{},"sourceType":"module"}