{"ast":null,"code":"import _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/maja/Code/ZuberSite/pages/about.js\";\nimport React, { Fragment, useContext } from 'react';\nimport { DataContext } from './_app';\nimport Section from '../components/Section';\n\nvar Post = function Post(_ref) {\n  var type = _ref.type,\n      headings = _ref.headings,\n      description = _ref.description,\n      quotes = _ref.quotes,\n      footnote = _ref.footnote,\n      vectorImage = _ref.vectorImage,\n      images = _objectWithoutProperties(_ref, [\"type\", \"headings\", \"description\", \"quotes\", \"footnote\", \"vectorImage\"]);\n\n  return React.createElement(\"div\", {\n    className: \"post post--\".concat(type),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, vectorImage ? React.createElement(\"img\", {\n    className: \"post__image\",\n    src: vectorImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }) : React.createElement(Image, _extends({}, images, {\n    baseClase: \"post\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"post__text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, headings && !!headings.length && headings.map(function (h) {\n    return React.createElement(\"h3\", {\n      className: \"t-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, h);\n  }), description && !!description.length && description.map(function (d) {\n    return React.createElement(\"p\", {\n      className: \"t-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, d);\n  }), quotes && !!quotes.length && quotes.map(function (q) {\n    return React.createElement(\"p\", {\n      className: \"t-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, q);\n  }), footnote && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, footnote)));\n};\n\nvar About = function About() {\n  var content = useContext(DataContext).about;\n\n  var sectionKeys = _Object$keys(content);\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, sectionKeys.map(function (sectionKey) {\n    var _content$sectionKey = content[sectionKey],\n        title = _content$sectionKey.title,\n        posts = _content$sectionKey.posts;\n    return React.createElement(Section, {\n      baseClass: sectionKey,\n      title: title,\n      flexHeight: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"post-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, posts.map(function (post, i) {\n      return React.createElement(Post, _extends({}, post, {\n        key: \"\".concat(sectionKey, \"-\").concat(i),\n        type: sectionKey,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }));\n    })));\n  }));\n};\n\nexport default About; // About.getInitialProps = async () => {\n// const res = await fetch('http://localhost:8888/wordpress/wp-json/wp/v2/posts?slug=bio&_embed', {\n//   method: 'get',\n//   mode: 'no-cors',\n// })\n// const json = await res.json()\n// return { ...data.about, labels: data.labels }\n// };","map":{"version":3,"sources":["/Users/maja/Code/ZuberSite/pages/about.js"],"names":["React","Fragment","useContext","DataContext","Section","Post","type","headings","description","quotes","footnote","vectorImage","images","length","map","h","d","q","About","content","about","sectionKeys","sectionKey","title","posts","post","i"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,WAAT,QAA4B,QAA5B;AACA,OAAOC,OAAP,MAAoB,uBAApB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO;AAAA,MAAGC,IAAH,QAAGA,IAAH;AAAA,MAASC,QAAT,QAASA,QAAT;AAAA,MAAmBC,WAAnB,QAAmBA,WAAnB;AAAA,MAAgCC,MAAhC,QAAgCA,MAAhC;AAAA,MAAwCC,QAAxC,QAAwCA,QAAxC;AAAA,MAAkDC,WAAlD,QAAkDA,WAAlD;AAAA,MAAkEC,MAAlE;;AAAA,SACT;AAAK,IAAA,SAAS,uBAAgBN,IAAhB,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMK,WAAW,GACT;AAAK,IAAA,SAAS,EAAC,aAAf;AAA6B,IAAA,GAAG,EAAGA,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADS,GAGT,oBAAC,KAAD,eAAYC,MAAZ;AAAqB,IAAA,SAAS,EAAC,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAJR,EAMI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACML,QAAQ,IAAI,CAAC,CAACA,QAAQ,CAACM,MAAvB,IACEN,QAAQ,CAACO,GAAT,CAAa,UAACC,CAAD;AAAA,WAAO;AAAI,MAAA,SAAS,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsBA,CAAtB,CAAP;AAAA,GAAb,CAFR,EAIMP,WAAW,IAAI,CAAC,CAACA,WAAW,CAACK,MAA7B,IACEL,WAAW,CAACM,GAAZ,CAAgB,UAACE,CAAD;AAAA,WAAO;AAAG,MAAA,SAAS,EAAC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqBA,CAArB,CAAP;AAAA,GAAhB,CALR,EAOMP,MAAM,IAAI,CAAC,CAACA,MAAM,CAACI,MAAnB,IACEJ,MAAM,CAACK,GAAP,CAAW,UAACG,CAAD;AAAA,WAAO;AAAG,MAAA,SAAS,EAAC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqBA,CAArB,CAAP;AAAA,GAAX,CARR,EAUMP,QAAQ,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOA,QAAP,CAVlB,CANJ,CADS;AAAA,CAAb;;AAsBA,IAAMQ,KAAK,GAAG,SAARA,KAAQ,GAAM;AAChB,MAAMC,OAAO,GAAGjB,UAAU,CAACC,WAAD,CAAV,CAAwBiB,KAAxC;;AACA,MAAMC,WAAW,GAAG,aAAYF,OAAZ,CAApB;;AAEA,SACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQE,WAAW,CAACP,GAAZ,CAAgB,UAACQ,UAAD,EAAgB;AAAA,8BACHH,OAAO,CAACG,UAAD,CADJ;AAAA,QACpBC,KADoB,uBACpBA,KADoB;AAAA,QACbC,KADa,uBACbA,KADa;AAG5B,WACI,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAGF,UAArB;AAAkC,MAAA,KAAK,EAAGC,KAA1C;AAAkD,MAAA,UAAU,MAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACMC,KAAK,CAACV,GAAN,CAAU,UAACW,IAAD,EAAOC,CAAP;AAAA,aACR,oBAAC,IAAD,eACSD,IADT;AAEI,QAAA,GAAG,YAAMH,UAAN,cAAoBI,CAApB,CAFP;AAGI,QAAA,IAAI,EAAGJ,UAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADQ;AAAA,KAAV,CADN,CADJ,CADJ;AAaH,GAhBD,CAFR,CADJ;AA4BH,CAhCD;;AAkCA,eAAeJ,KAAf,C,CAEA;AACI;AACA;AACA;AACA;AACA;AAEA;AACJ","sourcesContent":["import React, { Fragment, useContext } from 'react'\nimport { DataContext } from './_app'\nimport Section from '../components/Section'\n\nconst Post = ({ type, headings, description, quotes, footnote, vectorImage, ...images }) => (\n    <div className={`post post--${type}`}>\n        { vectorImage ?\n            <img className=\"post__image\" src={ vectorImage } />\n            :\n            <Image { ...images } baseClase=\"post\" />\n        }\n        <div className=\"post__text\">\n            { headings && !!headings.length &&\n                headings.map((h) => <h3 className=\"t-6\">{ h }</h3>)\n            }\n            { description && !!description.length &&\n                description.map((d) => <p className=\"t-8\">{ d }</p>)\n            }\n            { quotes && !!quotes.length &&\n                quotes.map((q) => <p className=\"t-8\">{ q }</p>)\n            }\n            { footnote && <div>{ footnote }</div> }\n        </div>\n    </div>\n)\n\nconst About = () => {\n    const content = useContext(DataContext).about\n    const sectionKeys = Object.keys(content)\n\n    return (\n        <Fragment>\n            {\n                sectionKeys.map((sectionKey) => {\n                    const { title, posts } = content[sectionKey]\n\n                    return (\n                        <Section baseClass={ sectionKey } title={ title } flexHeight>\n                            <div className=\"post-list\">\n                                { posts.map((post, i) => \n                                    <Post\n                                        { ...post }\n                                        key={ `${sectionKey}-${i}` }\n                                        type={ sectionKey } \n                                    />\n                                ) }\n                            </div>\n                        </Section>\n                    )\n                })\n            }\n            {/* <Section baseClass=\"about\" flexHeight>\n                <div className=\"product-list\">\n                    { products.map((product) => <ProductItem product={ product } key={ product.name } />) }\n                </div>\n            </Section> */}\n        </Fragment>\n    )\n}\n\nexport default About\n\n// About.getInitialProps = async () => {\n    // const res = await fetch('http://localhost:8888/wordpress/wp-json/wp/v2/posts?slug=bio&_embed', {\n    //   method: 'get',\n    //   mode: 'no-cors',\n    // })\n    // const json = await res.json()\n\n    // return { ...data.about, labels: data.labels }\n// };"]},"metadata":{},"sourceType":"module"}