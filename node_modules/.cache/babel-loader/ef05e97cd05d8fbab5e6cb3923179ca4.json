{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/maja/code/ZuberSite/components/Section.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Fade } from 'react-reveal';\n\nvar createObserver = function createObserver(el, handleIntersect) {\n  var options = {\n    root: null,\n    rootMargin: \"0px\",\n    threshold: 0.8\n  };\n  var observer = new IntersectionObserver(handleIntersect, options);\n  observer.observe(el);\n};\n\nvar Section = function Section(_ref) {\n  var baseClass = _ref.baseClass,\n      titleClass = _ref.titleClass,\n      title = _ref.title,\n      children = _ref.children,\n      flexHeight = _ref.flexHeight,\n      name = _ref.name,\n      observeIntersection = _ref.observeIntersection,\n      disableFade = _ref.disableFade;\n\n  var _useState = useState({\n    reveal: false,\n    y: null,\n    scrollUp: false\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var sectionRef = useRef();\n  useEffect(function () {\n    if (sectionRef.current && observeIntersection) {\n      createObserver(sectionRef.current, function (entries) {\n        var _entries$ = entries[0],\n            isIntersecting = _entries$.isIntersecting,\n            boundingClientRect = _entries$.boundingClientRect;\n        var y = boundingClientRect.y;\n        setState(function (prevState) {\n          return {\n            y: y,\n            reveal: isIntersecting,\n            scrollUp: prevState.y && y !== prevState.y ? y > prevState.y : prevState.scrollUp\n          };\n        });\n      });\n    }\n  }, []);\n\n  if (name === 'statistics') {}\n\n  return React.createElement(\"section\", {\n    className: \"\".concat(baseClass, \" section\").concat(flexHeight ? ' section--flex' : ''),\n    id: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, disableFade && title ? React.createElement(\"h3\", {\n    className: \"section-title t-6 t-grey \".concat(titleClass),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, title) : React.createElement(Fade, {\n    bottom: true,\n    opposite: true,\n    delay: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, title && React.createElement(\"h3\", {\n    className: \"section-title t-6 t-grey \".concat(titleClass),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, title)), React.createElement(\"div\", {\n    ref: sectionRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, typeof children === 'function' ? children(state) : children));\n};\n\nexport default Section;","map":{"version":3,"sources":["/Users/maja/code/ZuberSite/components/Section.js"],"names":["React","useState","useEffect","useRef","Fade","createObserver","el","handleIntersect","options","root","rootMargin","threshold","observer","IntersectionObserver","observe","Section","baseClass","titleClass","title","children","flexHeight","name","observeIntersection","disableFade","reveal","y","scrollUp","state","setState","sectionRef","current","entries","isIntersecting","boundingClientRect","prevState"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport { Fade } from 'react-reveal';\n\nconst createObserver = (el, handleIntersect) => {\n    const options = {\n        root: null,\n        rootMargin: \"0px\",\n        threshold: 0.8\n    };\n    const observer = new IntersectionObserver(handleIntersect, options);\n\n    observer.observe(el);\n}\n\nconst Section = ({ baseClass, titleClass, title, children, flexHeight, name, observeIntersection, disableFade }) => {\n    const [state, setState] = useState({ reveal: false, y: null, scrollUp: false })\n    const sectionRef = useRef()\n\n    useEffect(() => {\n        if (sectionRef.current && observeIntersection) {\n            createObserver(sectionRef.current, (entries) => {\n                const { isIntersecting, boundingClientRect } = entries[0]\n                const { y } = boundingClientRect\n\n                setState(prevState => ({\n                    y,\n                    reveal: isIntersecting,\n                    scrollUp: prevState.y && y !== prevState.y ? y > prevState.y : prevState.scrollUp\n                }))\n            })\n        }\n    }, [])\n\n    if (name === 'statistics') {}\n\n    return (\n        <section className={ `${ baseClass } section${flexHeight ? ' section--flex' : ''}` } id={ name }>\n            { disableFade && title ?\n                <h3 className={ `section-title t-6 t-grey ${titleClass}` }>{ title }</h3>\n            :\n                <Fade bottom opposite delay={ 0 }>\n                    { title &&  <h3 className={ `section-title t-6 t-grey ${titleClass}` }>{ title }</h3> }\n                </Fade>\n            }\n            <div ref={ sectionRef }>\n                { typeof children === 'function' ? children(state) : children }\n            </div>\n        </section>\n    )\n}\n\nexport default Section\n"]},"metadata":{},"sourceType":"module"}